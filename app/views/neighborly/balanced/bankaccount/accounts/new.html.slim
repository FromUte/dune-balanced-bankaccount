= initjs_tag app_name: 'Neighborly', partial: true

.neighborly-balanced-bankaccount-form[data-balanced-bankaccount-form data-balanced-marketplace-id=@balanced_marketplace_id data-routing-number-path=routing_number_path(:id)]
  = simple_form_for :payment, url: accounts_path, html: { class: 'custom', novalidate: '' } do |f|
    .row
      .large-12.columns.title
        h4 = t('.bankaccount.title')
        p = t('.bankaccount.subtitle')
      /.large-12.columns.check-numbers
        /= image_tag('payments/check-numbers.png')

      .large-12.columns.account-informations
        - if @bank_account.present?
          - verifications = @bank_account.verifications
          .row
            .large-2.columns
              = t('.status')
            .large-10.columns
              - if verifications.size > 0 && verifications.first.state == 'verified'
                span = t('.account_verified')
              - else
                span = t('.account_unverified')
                | &nbsp;
                = link_to t('.verify'), '#'
        .row
          .large-12.columns
            = f.input :account_holder_name, input_html: { value: @bank_account.try(:name) }

          .large-6.small-6.columns
            = f.input :routing_number, input_html: { value: @bank_account.try(:routing_number) }

          .large-6.small-6.columns
            = f.input :bank_name, disabled: true, input_html: { value: @bank_account.try(:bank_name) }

          .large-8.columns
            = f.input :account_number, input_html: { value: @bank_account.try(:account_number) }

          .large-4.columns
            = f.input :account_type, as: :radio_buttons, collection: [['Checking', 'checking'], ['Savings', 'savings']], checked: (@bank_account.try(:type) || 'checking')

      .large-6.columns
        = submit_tag (@bank_account.present? ? t('.update') : t('.add')), class: 'button', data: { disable_with: t('.proccessing') }

