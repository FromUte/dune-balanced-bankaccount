Dune.Dune                               ?= {}
Dune.Dune.Balanced                      ?= {}
Dune.Dune.Balanced.Bankaccount          ?= {}

Dune.Dune.Balanced.Bankaccount.Form = Backbone.View.extend
  el: '.dune-balanced-bankaccount-form'

  initialize: ->
    _.bindAll(this, 'submit', 'submitToBalanced')
    this.Flash = Dune.Dune.Balanced.Bankaccount.Flash

    $.getScript 'https://js.balancedpayments.com/1.1/balanced.js'

    this.$form = this.$('form')
    this.$form.bind('submit', this.submit)
    this.$('#payment_routing_number').bind('blur', this.showBankName)
    this.$('input[type=radio]').bind('change', this.fixFoundationRadio)

  fixFoundationRadio: =>
    this.$('.radio.checked').removeClass('checked')
    this.$('input[type=radio]:checked ~ .radio').addClass('checked')

  submit: (event) ->
    selectedBank = this.$('[name="payment[use_bank]"]:checked, [name="payment[use_bank]"]:hidden')
    return if $.inArray(selectedBank.val(), ['new', '']) == -1

    event.preventDefault()

    that = this
    routing_number_path = $('[data-routing-number-path]').
                            data('routing-number-path').
                            replace('id', this.$('#payment_routing_number').val())

    error_handler = ->
      that.Flash.message('<%= I18n.t('dune.balanced.bankaccount.payments.new.errors.routing_number') %>')
      $.rails.enableFormElements($('.dune-balanced-bankaccount-form'))
      $submit = $('.dune-balanced-bankaccount-form input[type=submit]')
      $submit.val($submit.data('enable-with'))

    $.getJSON routing_number_path, (response) ->
      if response.ok
        that.Flash.remove()
        that.$('.simple_form.payment').attr('novalidate', '')

        that.submitToBalanced(selectedBank)
      else
        error_handler()
    .error ->
      error_handler()

  submitToBalanced: (selectedBank) ->
    $.rails.disableFormElements($('.dune-balanced-bankaccount-form'))
    bankAccountData =
      name:           this.$('#payment_account_holder_name').val()
      routing_number: this.$('#payment_routing_number').val()
      account_number: this.$('#payment_account_number').val()
      account_type:   this.$('input[name="payment[account_type]"]:checked').val()

    this.$('[data-balanced-bank-account-input]').val('')

    balanced_callback_for_201 = (response) ->
      selectedBank.val(response.bank_accounts[0].href)
      $('[data-balanced-bankaccount-form] form').submit()

    that = this
    balanced_callback_for_402 = (response) ->
      that.Flash.message('<%= I18n.t('dune.balanced.bankaccount.payments.new.errors.bank_error') %>')
      $.rails.enableFormElements($('.dune-balanced-bankaccount-form'))
      $submit = $('.dune-balanced-bankaccount-form input[type=submit]')
      $submit.val($submit.data('enable-with'))

    balanced.bankAccount.create bankAccountData, (response) ->
      switch response.status_code
        when 201 then balanced_callback_for_201(response)
        when 402 then balanced_callback_for_402(response)

  showBankName: (e)=>
    number = $.trim(this.$('#payment_routing_number').val())
    unless number.length is 9
      this.$('#payment_bank_name').val('')
      return

    $.getJSON $('[data-routing-number-path]').data('routing-number-path').replace('id', number), (response) =>
      if response.ok
        this.$('#payment_bank_name').val($.trim(response.bank_name))
      else
        this.$('#payment_bank_name').val('')



